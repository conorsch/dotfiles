#!/bin/bash
git-review() {
    local target_branch
    target_branch="${1:-master}"
    git log --patch --reverse "${target_branch}..HEAD"
}

gmru() {
    # List all recently used branches within a git repo.
    # Mnemonic: "git most recently used"
    git for-each-ref --count="${1:-10}" \
        --sort=-committerdate refs/heads/ \
        --format='%(committerdate:relative) %09 %(objectname:short) %09 %(refname:short) %09 %(authorname)'
}

# List names of all contributors to a git repo
git-contributors() {
    git ls-tree -r -z --name-only HEAD -- "$1" \
        | xargs -0 -n1 git blame --line-porcelain HEAD \
        | grep  "^author " \
        | sort | uniq -c | sort -nr
}

# Quick dir-hopping. Uses functions rather than aliases because `exa` package
# is waning in availability. The "exa" utility was abandoned, briefly maintained
# as "eza", then that too was abandoned.
function ll() {
  if hash exa > /dev/null 2>&1 ; then
    exa -l "$@"
  elif hash eza > /dev/null 2>&1 ; then
    eza -l "$@"
  else
    ls -lsh "$@"
  fi
}

# Open all files by extension
editall() {
    local file_ext
    file_ext="$1"
    shift 1
    fd -e "$file_ext" . -X "${EDITOR:-vim}" -p
}

# Verify that emojis can display in terminal.
# Taken from starship docs:
# https://starship.rs/faq/#why-don-t-i-see-a-glyph-symbol-in-my-prompt
emoji-test() {
    printf "Snake icon: "
    echo -e "\xf0\x9f\x90\x8d"
    printf "Powerline branch: "
    echo -e "\xee\x82\xa0"
}

# Switch to a project directory.
# Replaces `virtualenvwrappers`'s alias,
# leveraging the muscle memory but relying on direnv.
workon() {
    local project_namespaces project_name
    declare -a project_namespaces=(pl personal misc)
    project_name="${1:-}"
    shift 1
    for project_namespace in "${project_namespaces[@]}"; do
      d="${HOME}/src/${project_namespace}/${project_name}"
      if [[ -e "$d" ]] ; then
        pushd "$d" || return 1
        return 0
      fi
    done
    # Backwards-compat: try without namespace.
    d="${HOME}/src/${project_name}"
    if [[ -e "$d" ]] ; then
      pushd "$d" || return 1
      return 0
    fi
    # If we made it this far then we don't have a result
    >&2 echo "ERROR: project name '$project_name' not found"
    return 1
}

# Remove an warm light / darkness customization
bright() {
    killall -9 redshift > /dev/null 2>&1 || true
    redshift -x -r > /dev/null
    brightnessctl --quiet set '100%'
}

# Set evening time laptop lighting.
warm() {
    bright
    redshift -orP -O 3700 -b "1" > /dev/null
}

# Set night time laptop lighting.
dark() {
    bright
    redshift -orP -O 3700 > /dev/null
    brightnessctl --quiet set '60%'
}

# Warm the build caches on a Rust project.
cargo-everything() {
    for c in build check clippy ; do
        printf 'Running cargo %s... ' "$c"
        cargo --quiet "$c"
        printf 'OK\n'
        printf 'Running cargo %s (release)... ' "$c"
        cargo --quiet "$c" --release
        printf 'OK\n'
    done
}

# Set terminal-config for screen-sharing and/or demo-recording.
# Simplifies the interface for clarity.
presentation-mode() {
    simple_starship_config="$HOME/.config/starship-presentation.toml"
    export STARSHIP_CONFIG="$simple_starship_config"
    clear
    "$SHELL"
    unset STARSHIP_CONFIG
    # A 'reset' is slow, ~3s, but complete. A 'clear' did not work here.
    reset
}

# Trying to get used to nvim, but I've been typing "vim" for decades...
# vim() {
#     local _editor
#     if hash nvim > /dev/null 2>&1 ; then
#         >&2 echo "Launching 'nvim' instead of 'vim'..."
#         _editor="nvim"
#     else
#         _editor="vim"
#     fi
#     "$_editor" "$@"
# }

# Set up a guitar practice session
guitar() {
    local s="${1:-.}"
    media_dir="/mnt/Valhalla/Media/Video/Guitar_vidz"
    >&2 echo "playing vids that match '$s'..."
    cd "$media_dir" || return 1
    # fd -t f MESHUGGAH --max-results 1 -X vlc --random
    fd -t f "$s" -X vlc --random
}
