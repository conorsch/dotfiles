#!/usr/bin/env bash
# Helper script to install Nix, from the community installer,
# in daemon mode. Storing as a custom script on PATH to make it
# easy to call from different contexts, e.g. to rerun interactively
# to update.
set -euo pipefail


>&2 echo "Setting up nix..."

# Qubes requires special-casing: disable SELinux, since Nix will error out if it's enabled,
# and then use the single-user installation style.


# Install nix: https://nixos.org/download/ ; skip if nix on PATH.
if ! hash nix > /dev/null 2>&1 ; then
  # Check whether we're running inside Qubes
  if qubesdb-read /qubes-vm-type > /dev/null 2>&1 ; then
    >&2 echo "Detected Qubes environment, disabling SELinux"
    sleep 2
    sudo setenforce 0
    sh <(curl -L https://nixos.org/nix/install)
  else
    sh <(curl -L https://nixos.org/nix/install) --daemon
  fi
fi

# Display info on update commands. Don't actually run them, trying to exercise
# the muscle memory a bit more to learn how nix channels work.
>&2 echo "Here's how to update nix:"
cat <<EOM
sudo su

# nix-env --install --file '<nixpkgs>' --attr nix cacert -I nixpkgs=channel:nixpkgs-unstable
nix-env --install --file '<nixpkgs>' --attr nix cacert -I nixpkgs=channel:nixpkgs-25.05
systemctl daemon-reload
systemctl restart nix-daemon
EOM
