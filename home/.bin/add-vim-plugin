#!/usr/bin/env python
"""
add-vim-plugin

Add vim plugins via pathogen in a git-managed dotfiles repo. Assumes 
homesick is used to managed the dotfiles, and bundle is used for vim plugins.

This script requires Python2.7 (rather than 3.x) due to the GitPython dependency.

Usage:
    add-vim-plugin [options] <repository>...

Examples:
    add-vim-plugin https://github.com/nother/vim-prose
    add-vim-plugin -d ~/.vim/bundle/vim-prose https://github.com/nother/vim-prose
    add-vim-plugin --help

Supported options:
    -d, --destination    # specify dotfiles repo for adding submodule 
                         [default: ~/.homesick/repos/dotfiles/home/.vim/bundle/<plugin_name>]
    -h, --help           # show this usage information
    -v, --verbose        # enable chatty output
"""
import os
import sys
import git

from docopt import docopt


def parse_repo_url(url):
    """Validates URL, returns tuple of original URL and name of plugin."""

    if "github.com" not in url:
        print("Specified remote git repository {} doesn't look right.".format(url)) 
        sys.exit(1)

    plugin_name = url.split("/")[-1]
    plugin_name = plugin_name.rstrip('/')
    plugin_name = plugin_name.rstrip('.git')

    return (url, plugin_name)
    
def get_dotfiles():
    """Returns a Git object of the git repository where dotfiles are tracked."""
    dotfiles = os.path.join(os.environ['HOME'], '.homesick', 'repos', 'dotfiles')
    if not os.path.isdir(dotfiles):
        print("Dotfiles directory not found: {}".format(dotfiles))
        sys.exit(1)
    return git.Git(dotfiles)

if __name__ == '__main__':
    args = docopt(__doc__, version='add-vim-plugin v0.1')
    repo = args['<repository>']

    for repo in args['<repository>']:
        url, plugin_name = parse_repo_url(repo)
        destination = args['--destination']

        if not destination:
            # Concatenate path based on standard homesick dir structure.
            destination = os.path.join('home', '.vim', 'bundle', plugin_name)

        g = get_dotfiles()
        g.execute(['git', 'submodule', 'add', '--force', url, destination])

