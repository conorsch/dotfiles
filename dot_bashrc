# vim: ft=bash

# Source custom aliases and functions.
[[ -f ~/.bash_aliases ]] && source ~/.bash_aliases
[[ -f ~/.bash_functions ]] && source ~/.bash_functions
# Source host-specific (non-version-controlled) env vars.
[[ -f ~/.bash_env_extra ]] && source ~/.bash_env_extra

# Set bash shell options.
shopt -s checkwinsize # check the window size after each command and, if necessary, update the values of LINES and COLUMNS.
shopt -s cdspell # correct typos when spelling out paths.
shopt -s cmdhist # multi-line commands are still entered into history
shopt -s histreedit # re-edit history substitution if command fails

# Configure merged history, so that commands from all terminal sessions,
# even in multiplexers, are recorded in history for the host machine.
# Taken from https://unix.stackexchange.com/a/556267
export HISTSIZE=5000
export HISTFILESIZE=5000
export HISTCONTROL=ignorespace:erasedups
shopt -s histappend
function historymerge {
    history -n; history -w; history -c; history -r;
}
trap historymerge EXIT
PROMPT_COMMAND="history -a; $PROMPT_COMMAND"

# Consider tab-completion via bash. Required for e.g. git branch names to be autocompleted.
if [[ -f /etc/bash_completion ]] ; then
    source /etc/bash_completion
elif [[ -f /usr/share/bash-completion/bash_completion ]] ; then
    source /usr/share/bash-completion/bash_completion
fi

# Source ssh-agent wrapper, specifically for QubesOS.
if [[ -z "SSH_CLIENT" ]] ; then
    if ! printenv | grep -q ^QUBES_ ; then
        source ~/.bin/ssh-agent-wrapper
    fi
fi

# rustlang dev config
. "$HOME/.cargo/env"

# direnv
if hash direnv > /dev/null 2>&1; then
    eval "$(direnv hook bash)"
fi
# hush up direnv
export DIRENV_LOG_FORMAT=""

# Starship shell prompt
if hash starship > /dev/null 2>&1 ; then
    eval "$(starship init bash)"
fi

# penv: penumbra version manager
if hash penv > /dev/null 2>&1 ; then
    eval "$(penv hook bash)"
fi

# Nix config
# The nix-installer appends a reference to the nix profile to bash,
# but doesn't actually create a file at this location.
nix_config="${HOME}/.nix-profile/etc/profile.d/nix.sh"
if [[ -e "$nix_config" ]] ; then
  . "$nix_config"
fi

# Configure home-manager
home_manager_config="${HOME}/.nix-profile/etc/profile.d/hm-session-vars.sh"
if [[ -e "$home_manager_config" ]] ; then
  . "$home_manager_config"
fi
